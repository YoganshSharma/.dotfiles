# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JBaEUEPBUGSTlHyVl-eQbBa5ZM6oaTr6
"""

import parso

import inspect
import sys
import logging
import os
def ult(code):
  grammar = parso.load_grammar()
  par = grammar.parse(code)
  errors = grammar.iter_errors(par)

  for err in errors:
    print(err.code,err.message, " in line ", err.start_pos[0] ,"and column", err.start_pos[1])

  alls = par.children[0].children[0].children[2].children[1].children

  logging.basicConfig(level=logging.DEBUG)

  def parse(lst):
    ans = []
    for itm in lst:
      try:
        ans.append(parse_list(itm.children[1].children))
      except:
          pass
    print(len(ans))
    return ans
  def parse_list(lst):
    ans = []
    for item in lst:
      try:
        ans.append(parse_func(item))
      except:
        pass
    
    return ans 
  def parse_func(func):
    args = func.children[2].children[1]
    args = parse_args(args)
    name = func.children[1].children[1].get_code()
    return {name:args}
  def parse_args(args):
    ans = {}
    for arg in args.children:

      try:
        if type(arg) is parso.python.tree.Operator:
          continue
        name = arg.children[0].value
        val = arg.children[2]
        if  hasattr(val,"value"):
          value = eval(val.value)
        elif hasattr(val,"get_code"):
          if name == "background" or name == "foreground":
            continue
          value = val.get_code()
          try:
            value = eval(value)
          except:
            logging.error("OKKK",exc_info = sys.exc_info())
            
        else:
            raise SyntaxError("INVALID CODE")
        ans[name] = value
      except:
        logging.error("OHNO",exc_info = sys.exc_info())
      
    return ans

  a = parse(alls)
  return a
